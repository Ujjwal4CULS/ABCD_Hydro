// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// abcd_cr
List abcd_cr(double para_a, double para_b, double para_c, double para_d, double SWS_ini, double S_ini, double G_ini, NumericVector p, NumericVector PE, NumericVector temp, double alpha, double beta, double Gmax);
RcppExport SEXP _Hydro_abcd_cr(SEXP para_aSEXP, SEXP para_bSEXP, SEXP para_cSEXP, SEXP para_dSEXP, SEXP SWS_iniSEXP, SEXP S_iniSEXP, SEXP G_iniSEXP, SEXP pSEXP, SEXP PESEXP, SEXP tempSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP GmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type para_a(para_aSEXP);
    Rcpp::traits::input_parameter< double >::type para_b(para_bSEXP);
    Rcpp::traits::input_parameter< double >::type para_c(para_cSEXP);
    Rcpp::traits::input_parameter< double >::type para_d(para_dSEXP);
    Rcpp::traits::input_parameter< double >::type SWS_ini(SWS_iniSEXP);
    Rcpp::traits::input_parameter< double >::type S_ini(S_iniSEXP);
    Rcpp::traits::input_parameter< double >::type G_ini(G_iniSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type PE(PESEXP);
    Rcpp::traits::input_parameter< NumericVector >::type temp(tempSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type Gmax(GmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(abcd_cr(para_a, para_b, para_c, para_d, SWS_ini, S_ini, G_ini, p, PE, temp, alpha, beta, Gmax));
    return rcpp_result_gen;
END_RCPP
}
// abcd_month_model_cpp
List abcd_month_model_cpp(double para_a, double para_b, double para_c, double para_d, double S_ini, double G_ini, NumericVector p, NumericVector PE);
RcppExport SEXP _Hydro_abcd_month_model_cpp(SEXP para_aSEXP, SEXP para_bSEXP, SEXP para_cSEXP, SEXP para_dSEXP, SEXP S_iniSEXP, SEXP G_iniSEXP, SEXP pSEXP, SEXP PESEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type para_a(para_aSEXP);
    Rcpp::traits::input_parameter< double >::type para_b(para_bSEXP);
    Rcpp::traits::input_parameter< double >::type para_c(para_cSEXP);
    Rcpp::traits::input_parameter< double >::type para_d(para_dSEXP);
    Rcpp::traits::input_parameter< double >::type S_ini(S_iniSEXP);
    Rcpp::traits::input_parameter< double >::type G_ini(G_iniSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type PE(PESEXP);
    rcpp_result_gen = Rcpp::wrap(abcd_month_model_cpp(para_a, para_b, para_c, para_d, S_ini, G_ini, p, PE));
    return rcpp_result_gen;
END_RCPP
}
// pet_oudin_cp
NumericVector pet_oudin_cp(Rcpp::StringVector date, NumericVector tavg, NumericVector lat);
RcppExport SEXP _Hydro_pet_oudin_cp(SEXP dateSEXP, SEXP tavgSEXP, SEXP latSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type date(dateSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tavg(tavgSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lat(latSEXP);
    rcpp_result_gen = Rcpp::wrap(pet_oudin_cp(date, tavg, lat));
    return rcpp_result_gen;
END_RCPP
}
// abcdseList
List abcdseList(double para_a, double para_b, double para_c, double para_d, NumericVector p, NumericVector PE, double S_ini, double G_ini);
RcppExport SEXP _Hydro_abcdseList(SEXP para_aSEXP, SEXP para_bSEXP, SEXP para_cSEXP, SEXP para_dSEXP, SEXP pSEXP, SEXP PESEXP, SEXP S_iniSEXP, SEXP G_iniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type para_a(para_aSEXP);
    Rcpp::traits::input_parameter< double >::type para_b(para_bSEXP);
    Rcpp::traits::input_parameter< double >::type para_c(para_cSEXP);
    Rcpp::traits::input_parameter< double >::type para_d(para_dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type PE(PESEXP);
    Rcpp::traits::input_parameter< double >::type S_ini(S_iniSEXP);
    Rcpp::traits::input_parameter< double >::type G_ini(G_iniSEXP);
    rcpp_result_gen = Rcpp::wrap(abcdseList(para_a, para_b, para_c, para_d, p, PE, S_ini, G_ini));
    return rcpp_result_gen;
END_RCPP
}
// day_cp
NumericVector day_cp(Rcpp::StringVector date);
RcppExport SEXP _Hydro_day_cp(SEXP dateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type date(dateSEXP);
    rcpp_result_gen = Rcpp::wrap(day_cp(date));
    return rcpp_result_gen;
END_RCPP
}
// month_cp
NumericVector month_cp(Rcpp::StringVector date);
RcppExport SEXP _Hydro_month_cp(SEXP dateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type date(dateSEXP);
    rcpp_result_gen = Rcpp::wrap(month_cp(date));
    return rcpp_result_gen;
END_RCPP
}
// year_cp
NumericVector year_cp(Rcpp::StringVector date);
RcppExport SEXP _Hydro_year_cp(SEXP dateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type date(dateSEXP);
    rcpp_result_gen = Rcpp::wrap(year_cp(date));
    return rcpp_result_gen;
END_RCPP
}
// julianday_cp
NumericVector julianday_cp(Rcpp::StringVector date);
RcppExport SEXP _Hydro_julianday_cp(SEXP dateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type date(dateSEXP);
    rcpp_result_gen = Rcpp::wrap(julianday_cp(date));
    return rcpp_result_gen;
END_RCPP
}
// AHI
NumericVector AHI(Rcpp::StringVector date, NumericVector temperature);
RcppExport SEXP _Hydro_AHI(SEXP dateSEXP, SEXP temperatureSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type date(dateSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type temperature(temperatureSEXP);
    rcpp_result_gen = Rcpp::wrap(AHI(date, temperature));
    return rcpp_result_gen;
END_RCPP
}
// pet_thorn_cpp
NumericVector pet_thorn_cpp(Rcpp::StringVector date, NumericVector tavg, NumericVector lat);
RcppExport SEXP _Hydro_pet_thorn_cpp(SEXP dateSEXP, SEXP tavgSEXP, SEXP latSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type date(dateSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tavg(tavgSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lat(latSEXP);
    rcpp_result_gen = Rcpp::wrap(pet_thorn_cpp(date, tavg, lat));
    return rcpp_result_gen;
END_RCPP
}
// pet_hamon
NumericVector pet_hamon(Rcpp::StringVector date, NumericVector tavg, NumericVector lat);
RcppExport SEXP _Hydro_pet_hamon(SEXP dateSEXP, SEXP tavgSEXP, SEXP latSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type date(dateSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tavg(tavgSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lat(latSEXP);
    rcpp_result_gen = Rcpp::wrap(pet_hamon(date, tavg, lat));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _Hydro_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Hydro_abcd_cr", (DL_FUNC) &_Hydro_abcd_cr, 13},
    {"_Hydro_abcd_month_model_cpp", (DL_FUNC) &_Hydro_abcd_month_model_cpp, 8},
    {"_Hydro_pet_oudin_cp", (DL_FUNC) &_Hydro_pet_oudin_cp, 3},
    {"_Hydro_abcdseList", (DL_FUNC) &_Hydro_abcdseList, 8},
    {"_Hydro_day_cp", (DL_FUNC) &_Hydro_day_cp, 1},
    {"_Hydro_month_cp", (DL_FUNC) &_Hydro_month_cp, 1},
    {"_Hydro_year_cp", (DL_FUNC) &_Hydro_year_cp, 1},
    {"_Hydro_julianday_cp", (DL_FUNC) &_Hydro_julianday_cp, 1},
    {"_Hydro_AHI", (DL_FUNC) &_Hydro_AHI, 2},
    {"_Hydro_pet_thorn_cpp", (DL_FUNC) &_Hydro_pet_thorn_cpp, 3},
    {"_Hydro_pet_hamon", (DL_FUNC) &_Hydro_pet_hamon, 3},
    {"_Hydro_rcpp_hello_world", (DL_FUNC) &_Hydro_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_Hydro(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
